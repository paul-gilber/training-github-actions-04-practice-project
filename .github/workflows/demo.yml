# Section 5: Job Artifacts & Outputs

# Sample Artifacts (Output Asset(s)):
## Docker Image
## App Store Packages
## Desktop Application
## Anything

name: Demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    outputs:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
      # steps.<step id>.outputs.<step output key>
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build  # stores output to "dist" directory
      - name: Publish JS filename
        # id field is required for defining output
        id: publish
        # Store to special file $GITHUB_OUTPUT managed by github
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          # Supports multiple paths and patterns
          path: |
            dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download and unzip "dist-files" artifact
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          # by default, files will be placed on current directory (files only excluding top level directory)
          path: dist
      - name: Output contents
        run: ls
      - name: Output filename
        # https://docs.github.com/en/actions/learn-github-actions/contexts#needs-context
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying ..."
